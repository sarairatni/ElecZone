generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  ProductID    Int           @id @default(autoincrement())
  Name         String
  Price        Float
  ImgUrl       String?
  CategoryID   Int
  Description  String
  CartProducts CartProduct[]
  OrderItems   OrderItem[]
  Category     Category      @relation(fields: [CategoryID], references: [CategoryID], onDelete: Cascade)
}

model Category {
  CategoryID Int       @id @default(autoincrement())
  Name       String    @unique
  Products   Product[]
}

model User {
  id            Int           @id @default(autoincrement())
  fname         String
  lastname      String
  email         String        @unique
  hashedPsw     String
  role          Role          @default(COSTUMER)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  odooContactId Int?
  CartProducts  CartProduct[]
  Orders        Order[]
}

model CartProduct {
  id         Int     @id @default(autoincrement())
  productId  Int
  customerId Int
  quantity   Int
  User       User    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  Product    Product @relation(fields: [productId], references: [ProductID], onDelete: Cascade)
}

model Order {
  id              Int         @id @default(autoincrement())
  customerFname   String
  customerLname   String
  customerPhone   String
  customerId      Int
  totalPrice      Float
  status          OrderStatus @default(PENDING)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  commune         String
  detailedAddress String
  postalCode      String?
  wilaya          String
  User            User        @relation(fields: [customerId], references: [id], onDelete: Cascade)
  OrderItems      OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int
  unitPrice  Float
  totalPrice Float
  Order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product    Product @relation(fields: [productId], references: [ProductID], onDelete: Cascade)

  @@unique([orderId, productId])
}

enum Role {
  ADMIN
  COSTUMER
}

enum OrderStatus {
  PENDING
  ACCEPTED
  DELIVERED
}
